services:
  nginx:
    container_name: alphie-nginx
    build: ./nginx
    env_file:
     - env/.env
     - env/www.env
    volumes:
     - ./cdn/data:/usr/share/nginx/cdn
    ports:
      - "80:80"
      - "443:443"

  bot:
    container_name: alphie-bot
    build: ./bot
    env_file:
      - env/bot.env
      - env/.env
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  db:
    container_name: alphie-db
    hostname: ${DB_HOSTNAME} # Defined in .env
    build: ./db
    env_file:
      - env/.env
    volumes:
      - ./db/data:/var/lib/postgresql/data # Persistent data storage
    ports:
      - ${DB_PORT}:5432
    
  cdn:
    container_name: alphie-cdn
    hostname: ${CDN_HOSTNAME} # Defined in .env
    build: ./cdn
    env_file:
     - env/.env
    volumes:
     - ./cdn/data:/usr/share/nginx/cdn
  
  www:
    container_name: alphie-www
    hostname: ${WWW_HOSTNAME} # Defined in .env
    build: ./www
    init: true
    env_file:
     - env/.env
     - env/www.env
    volumes:
     - ./www/build:/app/sync
    # Syncing the volume and starting nodemon for hot reloading
    command: sh -c "
      rm -rf /app/run && 
      rm -rf /app/sync/* && 
      cp -r /app/build/* /app/sync && 
      ln -s /app/sync /app/run && 
      python3 checkEnv.py && 
      yarn global add nodemon && 
      nodemon --watch /app/sync /app/run/build/index.js"

  grpc:
    container_name: alphie-grpc
    hostname: ${GRPC_HOSTNAME} # Defined in .env
    build: ./rpc
    env_file:
     - env/.env
     - env/grpc.env
    ports:
      - ${GRPC_PORT}:${GRPC_PORT}