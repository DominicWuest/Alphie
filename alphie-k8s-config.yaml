apiVersion: v1
kind: Namespace
metadata:
  name: alphie
  labels:
    name: alphie
--- # Secrets for the DB
apiVersion: v1
kind: Secret
metadata:
  namespace: alphie
  name: db-secrets
data:
  POSTGRES_USER: **REMOVED**
  POSTGRES_PASSWORD: **REMOVED**
--- # Secrets only relevant to the bot
apiVersion: v1
kind: Secret
metadata:
  namespace: alphie
  name: bot-secrets
data:
  API_TOKEN: **REMOVED**
  AUTHORIZED_IDS: **REMOVED**
  HOME_GUILD: **REMOVED**
--- # Environment variables used by all deployments
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: alphie
  name: shared-config
data:
  TZ: "Europe/Zurich"
--- # Environment variables for DB access
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: alphie
  name: db-config
data:
  DB_HOSTNAME: postgres # Name of the ClusterIP of the postgres deployment
  DB_PORT: "5432" 
--- # Environment variables for CDN backend services
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: alphie
  name: cdn-config
data:
  CDN_REST_PORT: "1337"
  CDN_HOSTNAME: cdn # Name of the ClusterIP of the alphie-cdn service
  CDN_ROOT: "/usr/share/nginx/cdn"
  CDN_DOMAIN: "cdn.alphie.dev"
--- # Environment variables for gRPC backend services
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: alphie
  name: grpc-config
data:
  GRPC_HOSTNAME: grpc # Name of the ClusterIP of the alphie-grpc service
  GRPC_PORT: "2003"
  BOUNCE_CAP: "3"
  FLUID_CAP: "1"
  LECTURE_CLIP_BASE_URL: **REMOVED**
--- # Environment variables for www service
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: alphie
  name: www-config
data:
  STUDENT_AUTH_PATH: "/student"
  STUDENT_AUTH_ENABLED: "1"
  DEV_MAIL_ADDR: **REMOVED**
  AUTHORIZATION_URL: **REMOVED**
  WWW_HOSTNAME: "www"
  WWW_DOMAIN: "www.alphie.dev"
  COMMON_DOMAIN: "alphie.dev"
  HTTP_PROTO: "https"
  JWT_PUBLIC_KEY: |
    -----BEGIN PUBLIC KEY-----
    MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqg7hGkOqtVF3NP1wSo4i
    J6Lfsgyjvw7kMrrIjvWRU0g+FTfB7IMBUTvimOk9AyqT+bmY/fhUPque5px+mvPP
    eFZRc1sDrgCNTBjSyNMjOv+3AlNRPH28xVuesQau5eKueZybJYJtvTv1JNsVzE2q
    +l8AN5hogAkykkIIHawYE2FqH2hAIYpriImYQIosLJIV9VZqR6hwMLAgvkVs0Cn2
    DiOLB7yVKGPhf2GKRd1OmIL6yfiBENsQhYeYrBx3WWKNlkjuJI75vBGBOvnQAbl3
    Hqz/D6f/AhOXH69PJEEpTC3L6oEQnbXq8rUbuTLnTpBZxTfPWHnpMKfYHq3YVB3V
    MQIDAQAB
    -----END PUBLIC KEY-----
--- # Ingress service
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: alphie
  name: ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
  - host: "cdn.alphie.dev"
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: nginx
            port:
              number: 80
  - host: "www.alphie.dev"
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: nginx
            port:
              number: 80
--- # Alphie-nginx service
apiVersion: v1
kind: Service
metadata:
  namespace: alphie
  name: nginx
spec:
  type: ClusterIP 
  selector:
    app: nginx
  ports:
  - name: nginx-http
    port: 80
--- # Alphie-nginx deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: alphie
  name: nginx
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: dominicwuest/alphie-nginx:0.2.0
        resources:
          limits:
            cpu: "250m"
            memory: "1024Mi"
        envFrom:
        - configMapRef:
            name: shared-config
        - configMapRef:
            name: cdn-config
        - configMapRef:
            name: www-config
        volumeMounts:
        - name: cdn-files
          mountPath: "usr/share/nginx/cdn"
          readOnly: true
      volumes:
      - name: cdn-files
        persistentVolumeClaim:
          claimName: cdn-files
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: hostname
                operator: In 
                values:
                - brittany
--- # PVC for CDN files
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: alphie
  name: cdn-files
  labels:
    app: cdn
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: ""
  resources:
    requests:
      storage: 5Gi
--- # Alphie-cdn service
kind: Service
apiVersion: v1
metadata:
  namespace: alphie
  name: cdn
spec:
  selector:
    app: cdn
  type: ClusterIP
  ports:
  - name: cdn-rest-port
    port: 1337
    targetPort: 1337
--- # Alphie-cdn deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: alphie
  name: cdn
  labels:
    app: cdn
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cdn
  template:
    metadata:
      labels:
        app: cdn
    spec:
      containers:
      - name: cdn
        image: dominicwuest/alphie-cdn:0.3.0
        resources:
          limits:
            cpu: "250m"
            memory: "1024Mi"
        envFrom:
        - configMapRef:
            name: shared-config
        - configMapRef:
            name: cdn-config
        volumeMounts:
        - name: cdn-files
          mountPath: "usr/share/nginx/cdn"
          readOnly: false
      volumes:
      - name: cdn-files
        persistentVolumeClaim:
          claimName: cdn-files
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: hostname
                operator: In 
                values:
                - brittany
--- # Alphie-bot deployment. No service needed as only outgoing connections get established
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: alphie
  name: bot
  labels:
    app: bot
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bot
  template:
    metadata:
      labels:
        app: bot
    spec:
      containers:
      - name: bot
        image: dominicwuest/alphie-bot:0.4.0
        resources:
          limits:
            cpu: "500m"
            memory: "1024Mi"
        envFrom:
        - secretRef:
            name: db-secrets
        - secretRef:
            name: bot-secrets
        - configMapRef:
            name: db-config
        - configMapRef:
            name: cdn-config
        - configMapRef:
            name: www-config
        - configMapRef:
            name: grpc-config
        - configMapRef:
            name: shared-config
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: hostname
                operator: In 
                values:
                - brittany
--- # Alphie-grpc service
kind: Service
apiVersion: v1
metadata:
  namespace: alphie
  name: grpc
spec:
  selector:
    app: grpc
  type: ClusterIP
  ports:
  - name: grpc-port
    port: 2003
    targetPort: 2003
--- # Alphie-grpc deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: alphie
  name: grpc
  labels:
    app: grpc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grpc
  template:
    metadata:
      labels:
        app: grpc
    spec:
      containers:
      - name: grpc
        image: dominicwuest/alphie-grpc:1.3.0
        resources:
          limits:
            cpu: "3.0"
            memory: "4Gi"
        envFrom:
        - configMapRef:
            name: shared-config
        - configMapRef:
            name: cdn-config
        - configMapRef:
            name: grpc-config
        - configMapRef:
            name: db-config
        - secretRef:
            name: db-secrets
        - configMapRef:
            name: www-config
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: hostname
                operator: In 
                values:
                - charlie
--- # Service for the database
apiVersion: v1
kind: Service
metadata:
  namespace: alphie
  name: postgres
spec:
  type: ClusterIP
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
--- # DB PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: alphie
  name: postgres-pvc
  labels:
    app: postgres
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: ""
  volumeName: postgres-pv
  resources:
    requests:
      storage: 5Gi
--- # Postgres-DB deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: alphie
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: dominicwuest/alphie-db:0.2.0
        resources:
          limits:
            cpu: "500m"
            memory: "1024Mi"
        volumeMounts:
          - name: postgres-pv
            mountPath: /var/lib/postgresql/data
        ports:
        - containerPort: 5432
        envFrom:
        - secretRef:
            name: db-secrets
        - configMapRef:
            name: shared-config
      volumes:
        - name: postgres-pv
          persistentVolumeClaim:
            claimName: postgres-pvc
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: hostname
                operator: In 
                values:
                - louis
--- # Service for the frontend
apiVersion: v1
kind: Service
metadata:
  namespace: alphie
  name: www
spec:
  type: ClusterIP
  selector:
    app: www
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
--- # Frontend deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: alphie
  name: www
  labels:
    app: www
spec:
  replicas: 1
  selector:
    matchLabels:
      app: www
  template:
    metadata:
      labels:
        app: www
    spec:
      containers:
      - name: www
        image: dominicwuest/alphie-www:0.1.0
        resources:
          limits:
            cpu: "250m"
            memory: "1024Mi"
        envFrom:
        - configMapRef:
            name: shared-config
        - configMapRef:
            name: cdn-config
        - configMapRef:
            name: www-config
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: hostname
                operator: In 
                values:
                - brittany